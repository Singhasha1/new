{"version":3,"sources":["component/Navbar.js","component/Textform.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","href","title","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","role","placeholder","defaultProps","Textform","_useState","useState","_useState2","Object","slicedToArray","text","Settext","Fragment","heading","para","mylabel1","value","onChange","event","console","log","target","rows","onClick","newtext","toUpperCase","toLowerCase","document","getElementById","select","navigator","clipboard","writeText","split","join","length","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0f8fb91c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\n\r\nexport default function Navbar(props){\r\n    return (\r\n        <nav className=\"navbar navbar-expand-lg bg-light\">\r\n        <div className=\"container-fluid\">\r\n          <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n          <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n            <span className=\"navbar-toggler-icon\"></span>\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n             </ul>\r\n            <form className=\"d-flex\" role=\"search\">\r\n              <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n              <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    \r\n      )\r\n}\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Please Set Title Here'\r\n}\r\n\r\n","import React, { useState}  from 'react'\r\n\r\nexport default function Textform(props){\r\n//uppercase Event\r\n  const Uppercaseconv = ()=>{\r\n    console.log(\"Uppercase was Clicked\" + text);\r\n    let newtext = text.toUpperCase();\r\n    Settext (newtext);\r\n  }\r\n  //Lowercase Event \r\n  const lowercaseconv = ()=>{\r\n    console.log(\"lowercase was clicked\" + text);\r\n    let newtext = text.toLowerCase();\r\n    Settext (newtext);\r\n  }\r\n    //Delete function \r\n  const deleteevent = ()=>{\r\n    let newtext = '';\r\n    Settext (newtext);\r\n  }\r\n  //copy function \r\n  const handlecopy = ()=>{\r\n    var text = document.getElementById(\"mybox\")\r\n    text.select();\r\n    navigator.clipboard.writeText(text.value);\r\n  }\r\n  //extra space\r\n  const extraspace =()=>{\r\n    let newtext = text.split(/[ ]+/);\r\n    Settext (newtext.join(\" \"))\r\n  }\r\n\r\n  const onchangefn = (event)=>{\r\n    console.log(\"on change\");\r\n    Settext(event.target.value);\r\n  }\r\n\r\n  const [text, Settext] = useState('');\r\n\r\n    return(  \r\n      <>  \r\n        <div className=\"container\">\r\n             <h1>{props.heading}</h1>\r\n              <p>{props.para}</p>\r\n       <div className=\"mb-3\">\r\n        <label  className=\"form-label\">{props.mylabel1}</label>\r\n        <textarea className=\"form-control\" id=\"mybox\" value={text} onChange={onchangefn} rows=\"8\"></textarea>\r\n        </div>\r\n        <button className=\"btn btn-primary mx-2 \" onClick={Uppercaseconv}>Uppercase</button>\r\n        <button className=\"btn btn-primary mx-2 \" onClick={lowercaseconv}>lowercase</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={deleteevent}>Delete</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={handlecopy}>copy</button>\r\n        <button className=\"btn btn-primary mx-2\" onClick={extraspace}>Remove space</button>\r\n        \r\n      </div>\r\n      <div className=\"container\">\r\n        <h1> Your Text Output</h1>\r\n        <p>{text.split (\" \").length}  words and {text.length} characters </p>\r\n        <h3>Preview</h3>\r\n        <p>{text}</p>\r\n      </div>\r\n      </>\r\n    )\r\n}\r\n\r\nTextform.defaultProps = {\r\n  heading: 'Please enter your heading',\r\n  para: 'Please enter developer name'\r\n}","import './App.css';\nimport React from 'react';\nimport Navbar from './component/Navbar';\nimport Textform from './component/Textform';\n\n\nfunction App() {\n\n  return (\n    <>\n  <Navbar title=\"Text Utility\"/>\n  <div className=\"container my-3\">\n  <Textform heading=\"Text Analyzer\" para=\"Developed by - Asha\" mylabel1=\"Please Enter Your Text\" />\n  </div>\n    </>\n  );\n}\n \nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}